# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare ENV
        run: |
          echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo IMAGE_TAG=$(echo ${{ github.ref }} | tr '[:upper:]' '[:lower:]' | awk '{split($0,a,"/"); print a[3]}') >> $GITHUB_ENV
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      # Docker build
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.6.1
        with:
          push: true
          tags: docker.pkg.github.com/${{ env.IMAGE_REPOSITORY }}/siteapi:${{ env.SHORT_SHA }}

      - uses: actions/checkout@master
      - name: deploy to cluster
        uses: ghostzero/kubectl@v1
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: set image --record deployment/magma-api magmafoundation=docker.pkg.github.com/${{ env.IMAGE_REPOSITORY }}/siteapi:${{ env.SHORT_SHA }} -n magmafoundation
      - name: verify deployment
        uses: ghostzero/kubectl@v1
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          KUBECTL_VERSION: "1.15"
        with:
          args: '"rollout status deployment/magma-api -n magmafoundation"'